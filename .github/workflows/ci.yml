name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          
      - name: Check formatting
        run: |
          nix fmt -- --fail-on-change
          
  flake-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          
      - name: Run flake check
        run: nix flake check

  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system:
          - x86_64-linux
          # Note: GitHub Actions runners don't support other architectures natively
          # Cross-compilation testing would require emulation or native runners
    steps:
      - uses: actions/checkout@v4
      
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          
      - name: Build crush package
        run: nix build .#crush --system ${{ matrix.system }}
        
      - name: Test binary functionality
        run: |
          CRUSH_BIN=$(nix build .#crush --no-link --print-out-paths --system ${{ matrix.system }})/bin/crush
          
          # Test that binary exists and is executable
          test -x "$CRUSH_BIN"
          
          # Test basic functionality (with timeout to prevent hanging)
          timeout 10s "$CRUSH_BIN" --help || echo "Help command completed or timed out"
          
      - name: Test cross-platform evaluation
        run: |
          # Test that we can evaluate packages for other systems
          # (evaluation only, not building since we don't have native runners)
          nix eval .#packages.x86_64-linux.crush.pname || echo "x86_64-linux evaluation failed"
          nix eval .#packages.aarch64-linux.crush.pname || echo "aarch64-linux evaluation failed" 
          nix eval .#packages.x86_64-darwin.crush.pname || echo "x86_64-darwin evaluation failed"
          nix eval .#packages.aarch64-darwin.crush.pname || echo "aarch64-darwin evaluation failed"
          
  dev-shell-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          
      - name: Test development shell
        run: |
          # Test that we can enter the dev shell and run commands
          nix develop --command check-version
          nix develop --command test-build
          
  run-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          
      - name: Test nix run
        run: |
          # Test that we can run the application
          timeout 10s nix run . -- --help || echo "Run test completed or timed out"
          
  update-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          
      - name: Test update mechanism
        run: |
          # Test that update checking works
          nix develop --command check-updates || true
          
          # Test version checking
          nix develop --command check-version